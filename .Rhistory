if (b > a) {
print("b is greater than a")
} else if (a == b) {
print("a and b are equal")
} else {
print("a is greater than b")
}
a <- 200
b <- 33
if (b > a) {
print("b is greater than a")
} else if (a == b) {
print("a and b are equal")
} else {
print("a is greater than b")
}
a=10
b=30
if (a>b){
print('a is greater than b')
}
if (a>b){
print('a is greater than b')
}
else if(b>a){
print('b is greater than a')
}
else {
print('a is equal to b')
}
if (a>b){
print('a is greater than b')
}
else if(b>a){
print('b is greater than a')
}
else {
print('a is equal to b')
}
a=10
b=30
if (a>b){
print('a is greater than b')
}
else if(b>a){
print('b is greater than a')
}
else {
print('a is equal to b')
}
a=10
b=30
if (a>b){
print('a is greater than b')
}
else if(b>a){
print('b is greater than a')
}
a <- 200
b <- 33
if (b > a) {
print("b is greater than a")
} else if (a == b) {
print("a and b are equal")
} else {
print("a is greater than b")
}
a=10
b=30
if (a>b){
print('a is greater than b')
} else if(b>a){
print('b is greater than a')
}
a=10
b=10
if (a>b){
print('a is greater than b')
} else if(b>a){
print('b is greater than a')
} else {
print('a is equal to b')
}
a <- 200
b <- 33
c=10
if(a>b and b>c){
print('Both conditions are true')
} else {
print('At least one of the condition is false')
}
if(a>b and b>c){
print('Both conditions are true')
} else {
print('At least one of the condition is false')
}
if(a>b & b>c){
print('Both conditions are true')
} else {
print('At least one of the condition is false')
}
c=100
if(a>b & b>c){
print('Both conditions are true')
} else {
print('At least one of the condition is false')
}
if(a>b | b>c){
print('At least one of the condition is false')
}
print('The conditions are both false')
dice=1:6
print(dice)
# Vector with numerical decimals in a sequence
numbers1 <- 1.5:6.5
numbers1
# Vector with numerical decimals in a sequence where the last element is not used
numbers2 <- 1.5:6.3
numbers2
fruits <- c("banana", "apple", "orange")
length(fruits)
sort(fruits)
numbers=c(20, 10, 44,5,2,67,90,76)
sort(numbers)
number[5]
numbers[5]
numbers[8]
fruits <- c("banana", "apple", "orange")
fruit[c(1,3)]
fruits[c(1,3)]
fruits[2]
fruits[-1]
fruits[-3]
fruits[-3]<-pear
fruits
fruits[3]<-pear
fruits <- c("banana", "apple", "orange")
fruits[3]<-pear
fruits
fruits[3]<-"pear"
fruits
#to repeat each number thrice
numbers=rep(c(20, 10, 44,5,2,67,90,76), each=3)
numbers
#to repeat the sequence thrice
numbers=rep(c(20, 10, 44,5,2,67,90,76), times=3)
numbers
numbers= seq(from=0, to=100, by=20)
numbers
#create a matrix
this_matrix<- matrix(c(1,3,5,2,4,6), nrow=2, ncol=3)
print(this_matrix)
#create a matrix
this_matrix<- matrix(c(1,3,5,2,4,6), nrow=3, ncol=2)
print(this_matrix)
this_matrix<- matrix(c(1,2,3,4,5,6), nrow=3, ncol=2)
print(this_matrix)
print(this_matrix)
this_matrix=matrix(c(tolu, tope, ade , ayo, demi, fumi, tade,yemi), nrow=2, ncol<-4)
this_matrix=matrix(c(tolu, tope, ade , ayo, demi, fumi, tade,yemi), nrow=2, ncol<-4)
this_matrix
this_matrix=matrix(c(tolu, tope, ade , ayo, demi, fumi, tade,yemi), nrow=2, ncol<-4)
this_matrix
this_matri=matrix(c(tolu, tope, ade , ayo, demi, fumi, tade,yemi), nrow=2, ncol<-4)
this_matri
this_matri
this_matrix=matrix(c('tolu', 'tope', 'ade' , 'ayo', 'demi', 'fumi', 'tade','yemi'), nrow=2, ncol<-4)
print(this_matrix)
#accessing a number in a matrix
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
thismatrix[1, 2]
#to access a whole row
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
thismatrix[2,]
thismatrix[,2]
#to access more than one row
thismatrix <- matrix(c("apple", "banana", "cherry", "orange","grape", "pineapple", "pear", "melon", "fig"), nrow = 3, ncol = 3)
thismatrix
thismatrix(c(1,2,))
thismatrix[c(1,2,)]
thismatrix[c(1,2),]
#to access more than one column
thismatrix <- matrix(c("apple", "banana", "cherry", "orange","grape", "pineapple", "pear", "melon", "fig"), nrow = 3, ncol = 3)
thismatrix
thismatrix[, c(1,2)]
######### Question 1############
getwd
setwd("~/5310 Project 1")
######### Question 1############
getwd
setwd("~/5310 Project 1")
dat <- read.csv("weather-2021.csv", check.names = F)
dat
######### Question 2############
#Question 2a
dat=dat[,-c(10)]
#2b
names(dat) <- c("Month", "Date", "MinTemp", "MaxTemp", "Rainfall",
"Evaporation", "Sunshine", "WindGustDir", "WindGustSpeed",
"Temp9am", "Humidity9am", "Cloud9am", "WindDir9am",
"WindSpeed9am", "Pressure9am", "Temp3pm", "Humidity3pm",
"Cloud3pm", "WindDir3pm", "WindSpeed3pm", "Pressure3pm")
dim(dat)
names(dat)
#2c
data=dat
vnames <- colnames(data)
n <- nrow(data)
out <- NULL
for (j in 1:ncol(data)){
vname <- colnames(data)[j]
x <- as.vector(data[,j])
n1 <- sum(is.na(x), na.rm=TRUE)  # NA
n2 <- sum(x=="NA", na.rm=TRUE) # "NA"
n3 <- sum(x==" ", na.rm=TRUE)  # missing
nmiss <- n1 + n2 + n3
nmiss <- sum(is.na(x))
ncomplete <- n-nmiss
out <- rbind(out, c(col.num=j, v.name=vname, mode=mode(x), n.level=length(unique(x)),
ncom=ncomplete, nmiss= nmiss, miss.prop=nmiss/n))
}
out <- as.data.frame(out)
row.names(out) <- NULL
out
#2d
apply(dat,2,FUN=function(x){table(x, useNA = "ifany")})
data[data$WindSpeed9am == "Calm", ]$WindSpeed9am <- 0
table(data$WindSpeed9am,useNA="ifany")
#2e
# WindSpeed3pm data "Calm" cannot be change to 0 because of the presence
# of missing values in the dataset
# error missing values are not allowed in subscripted assignments of data frames
#data[data$WindSpeed3pm == "Calm", ]$WindSpeed3pm <- 0
data$WindSpeed9am <- as.numeric(data$WindSpeed9am)
data$WindSpeed3pm <- as.numeric(data$WindSpeed3pm)
str(data)
# 2f
data$RainToday = c(ifelse(data$Rainfall >1, 1,0))
data$RainTomorrow = c(data$RainToday[2:nrow(data)],NA)
#2g
write.csv(data,"newDataSet.csv")
######### Question 3###########
data$RainTomorrow <- ifelse(data$RainTomorrow==0, "No", "Yes")
tab=table(data$RainTomorrow,useNA="no")
tab
barplot(tab,names.arg=row.names(tab),col=c("blue","yellow"),ylab="Frequency",xlab="Rain Tomorrow",main="Plot of Rain Tomorrow")
# RainTomorrow on Wind Gust Speed
boxplot<-boxplot(data$WindGustSpeed~data$RainTomorrow,xlab="Rain Tomorrow", ylab="Wind Gust Speed",main="Box plot of Wind Gust Speed on Rain Tomorrow",col=c("blue","yellow"))
hist(data$WindGustSpeed,main="Histogram of Wind Gust Speed",xlab="Wind Gust Speed")
t.test(data$WindGustSpeed~data$RainTomorrow, data=data, alternative = "two.sided",na.action = na.omit)
# RainTomorrow on Humidity at 3pm
boxplot<-boxplot(data$Humidity3pm~data$RainTomorrow,xlab="Rain Tomorrow", ylab="Humidity at 3pm",main="Box plot of Humidity at 3pm on Rain Tomorrow",col=c("blue","yellow"))
hist(data$Humidity3pm,main="Histogram of Humidity at 3pm",xlab="Humidity at 3pm")
t.test(data$Humidity3pm~data$RainTomorrow, data=data, alternative = "two.sided",na.action = na.omit)
# RainTomorrow on Cloud3pm
boxplot<-boxplot(data$Cloud3pm~data$RainTomorrow,xlab="Rain Tomorrow", ylab="Cloud at 3pm",main="Box plot of Temperature at 3pm on Rain Tomorrow",col=c("blue","yellow"))
hist(data$Cloud3pm,main="Histogram of CLoud at 3pm",xlab="CLoud at 3pm")
wilcox.test(data$Cloud3pm~data$RainTomorrow, data=data, alternative = "two.sided",na.action = na.omit)
# RainTomorrow on Rain Today
set.seed(500)
tab2=table(data$RainTomorrow,data$RainToday,useNA = "no")
tab2
barplot(tab2,col=cm.colors(2),legend.text=c("No","Yes"),beside =T,
xlab="Rain Today",ylab="Frequency",main="Multiple Bar chart of RainToday on RainTomorrow")
fisher.test(tab2,simulate.p.value = T)
chisq.test(tab2)
#####Month on Cloud ###
set.seed(500)
tab= table(data$Month,data$Cloud3pm)
tab
addmargins(tab)
fisher.test(tab,simulate.p.value = T)
getwd
######### Question 1############
setwd("~/5310 Project 1")
dat <- read.csv("weather-2021.csv", check.names = F)
dim(dat)
######### Question 2############
#Question 2a
dat=dat[,-c(10)]
#2b
names(dat) <- c("Month", "Date", "MinTemp", "MaxTemp", "Rainfall",
"Evaporation", "Sunshine", "WindGustDir", "WindGustSpeed",
"Temp9am", "Humidity9am", "Cloud9am", "WindDir9am",
"WindSpeed9am", "Pressure9am", "Temp3pm", "Humidity3pm",
"Cloud3pm", "WindDir3pm", "WindSpeed3pm", "Pressure3pm")
dim(dat)
names(dat)
#2c
data=dat
vnames <- colnames(data)
n <- nrow(data)
out <- NULL
for (j in 1:ncol(data)){
vname <- colnames(data)[j]
x <- as.vector(data[,j])
n1 <- sum(is.na(x), na.rm=TRUE)  # NA
n2 <- sum(x=="NA", na.rm=TRUE) # "NA"
n3 <- sum(x==" ", na.rm=TRUE)  # missing
nmiss <- n1 + n2 + n3
nmiss <- sum(is.na(x))
ncomplete <- n-nmiss
out <- rbind(out, c(col.num=j, v.name=vname, mode=mode(x), n.level=length(unique(x)),
ncom=ncomplete, nmiss= nmiss, miss.prop=nmiss/n))
}
out <- as.data.frame(out)
row.names(out) <- NULL
out
#2d
apply(dat,2,FUN=function(x){table(x, useNA = "ifany")})
data[data$WindSpeed9am == "Calm", ]$WindSpeed9am <- 0
table(data$WindSpeed9am,useNA="ifany")
#2e
# WindSpeed3pm data "Calm" cannot be change to 0 because of the presence
# of missing values in the dataset
# error missing values are not allowed in subscripted assignments of data frames
#data[data$WindSpeed3pm == "Calm", ]$WindSpeed3pm <- 0
data$WindSpeed9am <- as.numeric(data$WindSpeed9am)
data$WindSpeed3pm <- as.numeric(data$WindSpeed3pm)
str(data)
# 2f
data$RainToday = c(ifelse(data$Rainfall >1, 1,0))
data$RainTomorrow = c(data$RainToday[2:nrow(data)],NA)
#2g
write.csv(data,"newDataSet.csv")
######### Question 3###########
data$RainTomorrow <- ifelse(data$RainTomorrow==0, "No", "Yes")
tab=table(data$RainTomorrow,useNA="no")
tab
barplot(tab,names.arg=row.names(tab),col=c("blue","yellow"),ylab="Frequency",xlab="Rain Tomorrow",main="Plot of Rain Tomorrow")
# RainTomorrow on Wind Gust Speed
boxplot<-boxplot(data$WindGustSpeed~data$RainTomorrow,xlab="Rain Tomorrow", ylab="Wind Gust Speed",main="Box plot of Wind Gust Speed on Rain Tomorrow",col=c("blue","yellow"))
hist(data$WindGustSpeed,main="Histogram of Wind Gust Speed",xlab="Wind Gust Speed")
t.test(data$WindGustSpeed~data$RainTomorrow, data=data, alternative = "two.sided",na.action = na.omit)
# RainTomorrow on Humidity at 3pm
boxplot<-boxplot(data$Humidity3pm~data$RainTomorrow,xlab="Rain Tomorrow", ylab="Humidity at 3pm",main="Box plot of Humidity at 3pm on Rain Tomorrow",col=c("blue","yellow"))
hist(data$Humidity3pm,main="Histogram of Humidity at 3pm",xlab="Humidity at 3pm")
t.test(data$Humidity3pm~data$RainTomorrow, data=data, alternative = "two.sided",na.action = na.omit)
# RainTomorrow on Cloud3pm
boxplot<-boxplot(data$Cloud3pm~data$RainTomorrow,xlab="Rain Tomorrow", ylab="Cloud at 3pm",main="Box plot of Temperature at 3pm on Rain Tomorrow",col=c("blue","yellow"))
hist(data$Cloud3pm,main="Histogram of CLoud at 3pm",xlab="CLoud at 3pm")
wilcox.test(data$Cloud3pm~data$RainTomorrow, data=data, alternative = "two.sided",na.action = na.omit)
# RainTomorrow on Rain Today
set.seed(500)
tab2=table(data$RainTomorrow,data$RainToday,useNA = "no")
tab2
barplot(tab2,col=cm.colors(2),legend.text=c("No","Yes"),beside =T,
xlab="Rain Today",ylab="Frequency",main="Multiple Bar chart of RainToday on RainTomorrow")
fisher.test(tab2,simulate.p.value = T)
chisq.test(tab2)
#####Month on Cloud ###
set.seed(500)
tab= table(data$Month,data$Cloud3pm)
tab
addmargins(tab)
fisher.test(tab,simulate.p.value = T)
######### Question 1############
setwd("~/5310 Project 1")
dat <- read.csv("weather-2021.csv", check.names = F)
dim(dat)
######### Question 1############
setwd("~/5310 Project 1")
dat <- read.csv("weather-2021.csv", check.names = F)
dim(dat)
head(dat)
str(dat)
#Question 2a
dat=dat[,-c(10)]
#2b
#Question 2a
dat=dat[,-c(10)]
str(dat)
head(dat)
dim(dat)
